version: "3"

networks:
  laravel:
    driver: bridge

services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    tty: true
    ports:
      - "80:8001"
    volumes:
      - ./backend:/var/www/app
      - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      - laravel

  mysql:
    image: mysql:8.1
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - "${MYSQL_HOST_PORT}:${MYSQL_DOCKER_CONTAINER_PORT}"
    volumes:
      - .docker/db/data:/var/lib/mysql
      - .docker/logs:/var/log/mysql
      - .docker/db/my.cnf:/etc/mysql/conf.d/my.cnf
    environment:
      MYSQL_DATABASE: avrioc
      MYSQL_USER: testuser
      MYSQL_PASSWORD: testpass
      MYSQL_ROOT_PASSWORD: root
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - laravel

  php:
    build: .docker/php
    container_name: php
    restart: unless-stopped
    tty: true
    working_dir: /var/www/app
    volumes:
      - ./backend:/var/www/app
    ports:
      - "${PHP_HOST_PORT}:${PHP_DOCKER_CONTAINER_PORT}"
    networks:
      - laravel

  angular:
    build: ./frontend
    container_name: angular
    ports:
      - 4200:4200
    volumes:
      - ./frontend:/app
    networks:
      - laravel

  elasticsearch:
    image: elasticsearch:8.10.2
    container_name: elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    networks:
      - laravel
